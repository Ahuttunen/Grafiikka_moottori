#version 330 core

//Defined also in vertexshader.h


// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;

// Output data ; will be interpolated for each fragment.
//out vec3 fragmentColor;
out vec2 UV;
/* system outputs
vec4 gl_Position;
float gl_PointSize;
float gl_ClipDistance[];
*/
uniform mat4 MVP;

void main() {
  gl_Position = MVP*vec4(vertexPosition_modelspace,1);
  UV = vertexUV;
}
